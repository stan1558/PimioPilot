name: pimiopilot

services:
  # 1) Database first
  timescaledb:
    image: timescale/timescaledb:latest-pg16-oss
    # platform: linux/arm64/v8
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - TIMESCALEDB_TELEMETRY=off
    ports:
      - "5432:5432"
    volumes:
      - tsdata:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $${POSTGRES_DB:-marketdata}"]
      interval: 5s
      timeout: 3s
      retries: 20

  # 2) Main app (fetch jobs)
  app:
    build: .
    image: pimiopilot:latest
    environment:
      - TZ=Asia/Taipei
      - DB_HOST=timescaledb
      - DB_PORT=5432
      - DB_NAME=marketdata
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - PYTHONPATH=/app/src
      - TICKER=2330.TW
    depends_on:
      timescaledb:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    command: python -m pimiopilot_data.cli run --config examples/job.yaml
    restart: on-failure

  # 3) Query service (adhoc queries / exports)
  query:
    profiles: ["query"]
    build: .
    entrypoint: python -m pimiopilot_data.cli query
    environment:
      - DB_HOST=timescaledb
      - DB_NAME=marketdata
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_PORT=5432
      - PYTHONPATH=/app/src
    depends_on:
      timescaledb:
        condition: service_healthy
    volumes:
      - .:/app
    working_dir: /app
    # default config; can be overridden at run-time
    command: --config examples/query.yaml
    restart: "no"

  # 4) Scheduler last (cron runner)
  scheduler:
    image: alpine:3.20
    env_file: .env
    volumes:
      - ./:/app
      - ./ops/cron/root:/etc/crontabs/root:ro
    working_dir: /app
    command: sh -lc "apk add --no-cache tzdata >/dev/null && export TZ=Asia/Taipei && mkdir -p /app/out && crond -f -l 8 -L /dev/stdout"
    depends_on:
      timescaledb:
        condition: service_healthy
      app:
        condition: service_started

  test:
    image: pimiopilot:latest
    profiles:
    - test
    environment:
    - PYTHONPATH=/app/src
    command: pytest tests/ -v
    volumes:
    - .:/app
    working_dir: /app

volumes:
  tsdata:
